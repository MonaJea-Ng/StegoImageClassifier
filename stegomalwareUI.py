import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
from tkinterdnd2 import TkinterDnD, DND_FILES

current_image = None
scan_result = None

def upload_image(file_path=None):
    global current_image  
    if not file_path:
        file_path = filedialog.askopenfilename(title="Select an Image", filetypes=[("PNG Files", "*.png")])

    if file_path and file_path.lower().endswith('.png'):

        for widget in image_box.winfo_children():
            widget.destroy()
        or_label.destroy()
        upload_button.pack_forget()

        image = Image.open(file_path).resize((512, 512), Image.LANCZOS)
        current_image = ImageTk.PhotoImage(image)

        fixed_frame = tk.Frame(image_box, width=512, height=512, bg='lightgray', bd=1, relief='solid')
        fixed_frame.pack_propagate(False)
        label_image = tk.Label(fixed_frame, image=current_image)
        label_image.pack(fill=tk.BOTH, expand=False)  
        fixed_frame.pack()  

        button_frame = tk.Frame(window)
        button_frame.pack(pady=10)
        delete_button = tk.Button(button_frame, text="Delete", command=delete_image,
                                  bg='red', fg='white', bd=2, font=('Consolas', 12, 'bold'), width=20, height=2)
        delete_button.pack(side="left", padx=100)
        scan_button = tk.Button(button_frame, text="Scan", command=scan_image,
                                bg='green', fg='white', bd=2, font=('Consolas', 12, 'bold'), width=20, height=2)
        scan_button.pack(side="left", padx=100)
    else:
        tk.messagebox.showerror("Invalid File", "Please select a valid PNG image.")

def delete_image():
    global current_image
    current_image = None
    for widget in window.winfo_children():
        widget.destroy()
    setup_initial_window()

# Function to scan the displayed image (placeholder function)
def scan_image():
    global scan_result
    print("Scanning the image...")  # Placeholder for actual scanning logic/BACKEND/Model
    scan_result = "Malicious Ethereum Address"  # Example result 
    display_result()

def display_result():
    for widget in window.winfo_children():
        widget.destroy()

    title_label = tk.Label(window, text="IMAGE STEGOMALWARE DETECTION AND CLASSIFICATION", font=("Arial Rounded MT Bold", 16))
    title_label.pack(pady=10)

    result_frame = tk.Frame(window)
    result_frame.pack(pady=10)
    left_frame = tk.Frame(result_frame, width=512, height=512, bg='lightgray', bd=1, relief='solid')
    left_frame.pack(side="left", padx=50)

    if current_image:
        label_image = tk.Label(left_frame, image=current_image)
        label_image.pack(expand=True)

    right_frame = tk.Frame(result_frame)
    right_frame.pack(side="right", padx=50)
    tk.Label(right_frame, text="RESULT:", font=("Impact", 16)).pack()
    tk.Label(right_frame, text=scan_result, font=("Arial", 14)).pack(pady=10)

    reset_button = tk.Button(window, text="Reset", command=reset_to_initial,
                              bg='green', fg='white', bd=2, font=('Consolas', 12, 'bold'), width=20, height=2)
    reset_button.pack(pady=10)

def reset_to_initial():
    # Reset the current image and scan result
    global current_image, scan_result
    current_image = None
    scan_result = None
    for widget in window.winfo_children():
        widget.destroy()
    setup_initial_window()

def drop(event):
    file_path = event.data.strip('{}')
    upload_image(file_path)

def setup_initial_window():
    tk.Label(window, text="IMAGE STEGOMALWARE DETECTION AND CLASSIFICATION", font=("Arial Rounded MT Bold", 16)).pack(pady=10)

    global image_box
    image_box = tk.Frame(window, width=512, height=512, bg='lightgray', bd=1, relief='solid')
    image_box.pack(pady=10)
    image_box.pack_propagate(False)
    tk.Label(image_box, text="Drag a photo here", bg='lightgray', font=('Arial', 16, 'italic')).pack(expand=True)

    image_box.drop_target_register(DND_FILES)
    image_box.dnd_bind('<<Drop>>', drop)

    global or_label
    or_label = tk.Label(window, text="OR", font=('Bahnschrift', 14))
    or_label.pack(pady=5)

    global upload_button
    upload_button = tk.Button(window, text="Upload Image", command=upload_image,
                              bg='blue', fg='white', bd=3, font=('Consolas', 12, 'bold'), width=20, height=2)
    upload_button.pack(pady=5)


window = TkinterDnD.Tk()
window.title("IMAGE STEGOMALWARE DETECTION AND CLASSIFICATION")
window.geometry("1000x700")
window.resizable(False, False)

setup_initial_window()


window.mainloop()
